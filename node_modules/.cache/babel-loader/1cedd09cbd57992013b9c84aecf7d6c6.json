{"ast":null,"code":"const LOAD = 'modules/Home/LOAD';\nconst GET_DATA = 'modules/Home/GET_DATA';\nconst FAIL = 'modules/Home/FAIL';\nconst HANDLE_LOVED = 'modules/Home/HANDLE_LOVED';\nconst ADD_BUY = 'modules/Home/ADD_BUY';\nconst initialState = {\n  data: {\n    category: [{\n      imageUrl: '',\n      id: 0,\n      name: ''\n    }],\n    productPromo: [{\n      id: '',\n      imageUrl: '',\n      title: '',\n      description: '',\n      price: '',\n      loved: 0\n    }],\n    productSold: [{\n      id: '',\n      imageUrl: '',\n      title: '',\n      description: '',\n      price: '',\n      loved: 0\n    }]\n  }\n};\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case LOAD:\n      return { ...state,\n        loaded: false,\n        loading: true\n      };\n\n    case GET_DATA:\n      const object = action.result[0];\n      return { ...object,\n        loaded: true,\n        loading: false\n      };\n\n    case FAIL:\n      delete state.result;\n      return {\n        loaded: true,\n        loading: false,\n        result: false,\n        error: action.error\n      };\n\n    case HANDLE_LOVED:\n      const isLoved = state.data.productPromo.filter(x => x.id === action.id);\n      isLoved[0].loved = action.value;\n      return { ...state,\n        loaded: true,\n        loading: false\n      };\n\n    case ADD_BUY:\n      let a = [];\n      const bought = state.data.productPromo.filter(x => x.id === action.id);\n      bought.map((abc, def) => {\n        a.push(abc);\n        return abc;\n      });\n      console.log('a', a);\n      state.data.productSold = a;\n      localStorage.setItem('sold', JSON.stringify(state.data.productSold));\n      return { ...state,\n        loaded: false,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n}\nexport function getDataHome() {\n  const url = 'https://private-4639ce-ecommerce56.apiary-mock.com/home';\n  return {\n    types: [LOAD, GET_DATA, FAIL],\n    promise: client => client.get(url, {})\n  };\n}\nexport function handleLoved(value, id, fieldName) {\n  return {\n    type: HANDLE_LOVED,\n    value,\n    id,\n    fieldName\n  };\n}\nexport function addBuy(id) {\n  return {\n    type: ADD_BUY,\n    id\n  };\n}","map":{"version":3,"sources":["/Users/gredu/Documents/react-marketplace/src/redux-modules/modules/Home.js"],"names":["LOAD","GET_DATA","FAIL","HANDLE_LOVED","ADD_BUY","initialState","data","category","imageUrl","id","name","productPromo","title","description","price","loved","productSold","reducer","state","action","type","loaded","loading","object","result","error","isLoved","filter","x","value","a","bought","map","abc","def","push","console","log","localStorage","setItem","JSON","stringify","getDataHome","url","types","promise","client","get","handleLoved","fieldName","addBuy"],"mappings":"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","sourcesContent":["const LOAD = 'modules/Home/LOAD';\nconst GET_DATA = 'modules/Home/GET_DATA';\nconst FAIL = 'modules/Home/FAIL';\nconst HANDLE_LOVED = 'modules/Home/HANDLE_LOVED';\nconst ADD_BUY = 'modules/Home/ADD_BUY';\n\nconst initialState = {\n    data: {\n        category: [\n            {\n                imageUrl: '',\n                id: 0,\n                name: '',\n            },\n        ],\n        productPromo: [\n            {\n                id: '',\n                imageUrl: '',\n                title: '',\n                description: '',\n                price: '',\n                loved: 0,\n            },\n        ],\n        productSold: [\n            {\n                id: '',\n                imageUrl: '',\n                title: '',\n                description: '',\n                price: '',\n                loved: 0,\n            }\n        ]\n    },\n};\n\nexport default function reducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case LOAD:\n            return {\n                ...state,\n                loaded: false,\n                loading: true,\n            };\n\n        case GET_DATA:\n            const object = action.result[0];\n\n            return {\n                ...object,\n                loaded: true,\n                loading: false,\n            }\n\n        case FAIL:\n            delete state.result;\n            return {\n                loaded: true,\n                loading: false,\n                result: false,\n                error: action.error,\n            };\n\n        case HANDLE_LOVED:\n            const isLoved = state.data.productPromo.filter(x => x.id === action.id);\n            isLoved[0].loved = action.value;\n            return {\n                ...state,\n                loaded: true,\n                loading: false,\n            };\n\n        case ADD_BUY:\n            let a = [];\n            const bought = state.data.productPromo.filter(x => x.id === action.id);\n            bought.map((abc, def) => {\n                a.push(abc);\n                return abc;\n            });\n            console.log('a', a);\n            state.data.productSold = a;\n            localStorage.setItem('sold', JSON.stringify(state.data.productSold));\n\n            return {\n                ...state,\n                loaded: false,\n                loading: true,\n            };\n\n        default:\n            return state;\n    }\n}\n\nexport function getDataHome() {\n    const url = 'https://private-4639ce-ecommerce56.apiary-mock.com/home';\n    return {\n        types: [LOAD, GET_DATA, FAIL],\n        promise: client => client.get(url, {}),\n    };\n}\n\nexport function handleLoved(value, id, fieldName) {\n    return {\n        type: HANDLE_LOVED,\n        value,\n        id,\n        fieldName,\n    };\n}\n\nexport function addBuy(id) {\n    return {\n        type: ADD_BUY,\n        id,\n    };\n}"]},"metadata":{},"sourceType":"module"}