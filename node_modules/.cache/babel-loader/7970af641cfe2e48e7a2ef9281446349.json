{"ast":null,"code":"const LOAD = 'modules/Home/LOAD';\nconst GET_DATA = 'modules/Home/GET_DATA';\nconst FAIL = 'modules/Home/FAIL';\nconst HANDLE_LOVED = 'modules/Home/HANDLE_LOVED';\nconst initialState = {\n  data: {\n    category: [{\n      imageUrl: '',\n      id: 0,\n      name: ''\n    }],\n    productPromo: [{\n      id: '',\n      imageUrl: '',\n      title: '',\n      description: '',\n      price: '',\n      loved: 0\n    }]\n  }\n};\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case LOAD:\n      return { ...state,\n        loaded: false,\n        loading: true\n      };\n\n    case GET_DATA:\n      const object = action.result[0]; // action.result.map((data) => {\n      //     object = data;\n      //     return data;\n      // })\n\n      console.log('object', object);\n      return { ...object,\n        loaded: true,\n        loading: false\n      };\n\n    case FAIL:\n      delete state.result;\n      return {\n        loaded: true,\n        loading: false,\n        result: false,\n        error: action.error\n      };\n\n    case HANDLE_LOVED:\n      const isLoved = state.data.productPromo.filter(x => x.id === action.id);\n      console.log('islovedddd', isLoved);\n      state[action.fieldName] = action.value;\n      console.log('action', state);\n      return { ...state,\n        loaded: true,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}\nexport function getDataHome() {\n  const url = 'https://private-4639ce-ecommerce56.apiary-mock.com/home';\n  return {\n    types: [LOAD, GET_DATA, FAIL],\n    promise: client => client.get(url, {})\n  };\n}\nexport function handleLoved(value, id, fieldName) {\n  return {\n    type: HANDLE_LOVED,\n    value,\n    id,\n    fieldName\n  };\n}","map":{"version":3,"sources":["/Users/gredu/Documents/react-marketplace/src/redux-modules/modules/Home.js"],"names":["LOAD","GET_DATA","FAIL","HANDLE_LOVED","initialState","data","category","imageUrl","id","name","productPromo","title","description","price","loved","reducer","state","action","type","loaded","loading","object","result","console","log","error","isLoved","filter","x","fieldName","value","getDataHome","url","types","promise","client","get","handleLoved"],"mappings":"AAAA,MAAMA,IAAI,GAAG,mBAAb;AACA,MAAMC,QAAQ,GAAG,uBAAjB;AACA,MAAMC,IAAI,GAAG,mBAAb;AACA,MAAMC,YAAY,GAAG,2BAArB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,QAAQ,EAAE,EADd;AAEIC,MAAAA,EAAE,EAAE,CAFR;AAGIC,MAAAA,IAAI,EAAE;AAHV,KADM,CADR;AAQFC,IAAAA,YAAY,EAAE,CACV;AACIF,MAAAA,EAAE,EAAE,EADR;AAEID,MAAAA,QAAQ,EAAE,EAFd;AAGII,MAAAA,KAAK,EAAE,EAHX;AAIIC,MAAAA,WAAW,EAAE,EAJjB;AAKIC,MAAAA,KAAK,EAAE,EALX;AAMIC,MAAAA,KAAK,EAAE;AANX,KADU;AARZ;AADW,CAArB;AAsBA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGZ,YAAzB,EAAuCa,MAAM,GAAG,EAAhD,EAAoD;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKlB,IAAL;AACI,aAAO,EACH,GAAGgB,KADA;AAEHG,QAAAA,MAAM,EAAE,KAFL;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAKnB,QAAL;AACI,YAAMoB,MAAM,GAAGJ,MAAM,CAACK,MAAP,CAAc,CAAd,CAAf,CADJ,CAEI;AACA;AACA;AACA;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAtB;AAEA,aAAO,EACH,GAAGA,MADA;AAEHF,QAAAA,MAAM,EAAE,IAFL;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAKlB,IAAL;AACI,aAAOc,KAAK,CAACM,MAAb;AACA,aAAO;AACHH,QAAAA,MAAM,EAAE,IADL;AAEHC,QAAAA,OAAO,EAAE,KAFN;AAGHE,QAAAA,MAAM,EAAE,KAHL;AAIHG,QAAAA,KAAK,EAAER,MAAM,CAACQ;AAJX,OAAP;;AAOJ,SAAKtB,YAAL;AACI,YAAMuB,OAAO,GAAGV,KAAK,CAACX,IAAN,CAAWK,YAAX,CAAwBiB,MAAxB,CAA+BC,CAAC,IAAIA,CAAC,CAACpB,EAAF,KAASS,MAAM,CAACT,EAApD,CAAhB;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BE,OAA1B;AACAV,MAAAA,KAAK,CAACC,MAAM,CAACY,SAAR,CAAL,GAA0BZ,MAAM,CAACa,KAAjC;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,KAAtB;AACA,aAAO,EACH,GAAGA,KADA;AAEHG,QAAAA,MAAM,EAAE,IAFL;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ;AACI,aAAOJ,KAAP;AA3CR;AA6CH;AAED,OAAO,SAASe,WAAT,GAAuB;AAC1B,QAAMC,GAAG,GAAG,yDAAZ;AACA,SAAO;AACHC,IAAAA,KAAK,EAAE,CAACjC,IAAD,EAAOC,QAAP,EAAiBC,IAAjB,CADJ;AAEHgC,IAAAA,OAAO,EAAEC,MAAM,IAAIA,MAAM,CAACC,GAAP,CAAWJ,GAAX,EAAgB,EAAhB;AAFhB,GAAP;AAIH;AAED,OAAO,SAASK,WAAT,CAAqBP,KAArB,EAA4BtB,EAA5B,EAAgCqB,SAAhC,EAA2C;AAC9C,SAAO;AACHX,IAAAA,IAAI,EAAEf,YADH;AAEH2B,IAAAA,KAFG;AAGHtB,IAAAA,EAHG;AAIHqB,IAAAA;AAJG,GAAP;AAMH","sourcesContent":["const LOAD = 'modules/Home/LOAD';\nconst GET_DATA = 'modules/Home/GET_DATA';\nconst FAIL = 'modules/Home/FAIL';\nconst HANDLE_LOVED = 'modules/Home/HANDLE_LOVED';\n\nconst initialState = {\n    data: {\n        category: [\n            {\n                imageUrl: '',\n                id: 0,\n                name: '',\n            },\n        ],\n        productPromo: [\n            {\n                id: '',\n                imageUrl: '',\n                title: '',\n                description: '',\n                price: '',\n                loved: 0,\n            },\n        ]\n    },\n};\n\nexport default function reducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case LOAD:\n            return {\n                ...state,\n                loaded: false,\n                loading: true,\n            };\n\n        case GET_DATA:\n            const object = action.result[0];\n            // action.result.map((data) => {\n            //     object = data;\n            //     return data;\n            // })\n            console.log('object', object);\n            \n            return {\n                ...object,\n                loaded: true,\n                loading: false,\n            }\n\n        case FAIL:\n            delete state.result;\n            return {\n                loaded: true,\n                loading: false,\n                result: false,\n                error: action.error,\n            };\n\n        case HANDLE_LOVED:\n            const isLoved = state.data.productPromo.filter(x => x.id === action.id);\n            console.log('islovedddd', isLoved);\n            state[action.fieldName] = action.value;\n            console.log('action', state)\n            return {\n                ...state,\n                loaded: true,\n                loading: false,\n            };\n\n        default:\n            return state;\n    }\n}\n\nexport function getDataHome() {\n    const url = 'https://private-4639ce-ecommerce56.apiary-mock.com/home';\n    return {\n        types: [LOAD, GET_DATA, FAIL],\n        promise: client => client.get(url, {}),\n    };\n}\n\nexport function handleLoved(value, id, fieldName) {\n    return {\n        type: HANDLE_LOVED,\n        value,\n        id,\n        fieldName,\n    };\n}"]},"metadata":{},"sourceType":"module"}